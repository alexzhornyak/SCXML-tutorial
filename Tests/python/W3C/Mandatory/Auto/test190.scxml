<?xml version="1.0" encoding="UTF-8"?><!-- we test that #_scxml_sessionid as a target of <send> puts the event on the external queue.  If it does,
event1 will be processed before event2, because event1 is added to the internal queue while event2 is
added to the external queue (event though event2 is generated first).  we have to make sure that event2
is actually delivered.  The delayed <send> makes sure another event is generated (so the test doesn't hang) --><scxml xmlns="http://www.w3.org/2005/07/scxml" xmlns:conf="http://www.w3.org/2005/scxml-conformance" initial="s0" version="1.0" datamodel="python">
<datamodel>
 <data id="Var1" expr="'#_scxml_'"/>
 <data id="Var2" expr="_sessionid"/>
 </datamodel>
  
<state id="s0">
  <onentry>
  <assign location="Var1" expr="Var1 + Var2"/>
   <!-- goes to the external queue -->
   <send event="event2" targetexpr="Var1"/>
   <!-- to the internal queue -->
   <raise event="event1"/>
   <!-- this should get added to the external queue after event2 -->
   <send event="timeout"/>
    </onentry>
 
 <!-- once we've entered the state, we should check for internal events first -->   
  <transition event="event1" target="s1"/>
  <transition event="*" target="fail"/>
 </state>
 
<!-- now check that we get event2 and not a timeout -->
<state id="s1">
  <transition event="event2" target="pass"/>
  <transition event="*" target="fail"/>
  </state>

   <final id="pass"><onentry><log label="Outcome" expr="'pass'"/></onentry></final>
   <final id="fail"><onentry><log label="Outcome" expr="'fail'"/></onentry></final>

</scxml>